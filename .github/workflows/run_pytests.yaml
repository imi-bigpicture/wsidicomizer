name: wsidicomizer pytest

on: [push, pull_request]

jobs:
  cache_test_images:
    name: cache test images
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Load test images from cache
        id: cache-test-images
        uses: actions/cache@v3
        with:
          key: test-images-cache-${{ hashFiles('tests/download_test_images.py') }}
          path: WSIDICOMIZER_TESTDATA
      - name: Load test images
        if: steps.cache-test-images.outputs.cache-hit != 'true'
        env:
          WSIDICOMIZER_TESTDIR: WSIDICOMIZER_TESTDATA
        run: |
          python -m pip install -U pip
          python -m pip install requests
          python tests/download_test_images.py

  tests:
    needs: [ cache_test_images ]
    name: pytest py${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 6
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Python
        id: setup-python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Load test images from cache
        id: cache-test-images
        uses: actions/cache@v3
        with:
          key: test-images-cache-${{ hashFiles('tests/download_test_images.py') }}
          path: WSIDICOMIZER_TESTDATA
      - name: Check test images are loaded
        if: steps.cache-test-images.outputs.cache-hit != 'true'
        uses: actions/github-script@v3
        with:
          script: |
            core.setFailed('test images were not cached')
      - name: Set up libturbojpeg
        run: sudo apt-get install -y libturbojpeg
      - name: Set up libopenslide0
        run: sudo apt-get install -y libopenslide0

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry

      - name: Install Application
        run: python -m poetry install

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          python -m poetry run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          python -m poetry run flake8 . --count --exit-zero --max-complexity=10 --max-line-length=80 --statistics

      - name: Run tests
        env:
          WSIDICOMIZER_TESTDIR: WSIDICOMIZER_TESTDATA
        run: python -m poetry run pytest
